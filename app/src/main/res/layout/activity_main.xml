<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="title"
            type="String" />

        <variable
            name="viewModel"
            type="org.sopt.bindingexample.MainViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">

        <!-- 예제1 *******************************************************************
        (week10에서 설명안함 / 다음에 Binding Adapter 설명할때 사용할 예정)

        DataBinding, BindingAdapter 를 활용한 예제
        Button을 누르면 viewmodel의 likes가 1씩 증가하고 ProgressBar의 Value가 변경됨
        ProgressBar는 퍼센트가 0 이상일 때만 보임

        point1) default를 사용해서 tools 속성을 대체
        point2) BindingAdapter에서 여러 attibute의 변수를 동시에 사용하기ㅇ
        point2) BindingAdapter에서 coerceAtMost 를 사용
        **************************************************************************** -->

        <TextView
            android:id="@+id/name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{`likes = ` + String.valueOf(viewModel.likes), default=my_default}"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@color/purple_200"
            android:onClick="@{() -> viewModel.likePressed()}"
            android:text="Button"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/name" />

        <ProgressBar
            android:id="@+id/progress_bar"
            style="?android:attr/progressBarStyleHorizontal"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:max="@{100}"
            app:hideIfZero="@{viewModel.likes}"
            app:layout_constraintTop_toBottomOf="@id/button"
            app:progressScaled="@{viewModel.likes}" />

        <View
            android:id="@+id/view_line"
            android:layout_width="match_parent"
            android:layout_height="1dp"
            android:layout_marginTop="30dp"
            android:background="@color/purple_200"
            app:layout_constraintTop_toBottomOf="@id/progress_bar" />

        <!-- 예제2 **************************************************************
        View references 사용 예제
        EditText의 값을 TextView에서 바로 참조해 EditText의 Text length를 실시간으로 받아옴.
        양방향 데이터 바인딩을 사용하는 로직을 개선하기 좋아보임!
        **********************************************************************-->

        <EditText
            android:id="@+id/example_text"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/view_line" />

        <TextView
            android:id="@+id/example_output"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:text="@{String.valueOf(exampleText.text.length())}"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/example_text" />

        <View
            android:id="@+id/view_line2"
            android:layout_width="match_parent"
            android:layout_height="1dp"
            android:layout_marginTop="30dp"
            android:background="@color/purple_200"
            app:layout_constraintTop_toBottomOf="@id/example_output" />
        <!-- 예제 3 **************************************************************
        Dimension 사용 방법
        ***********************************************************************-->

        <ImageView
            android:id="@+id/iv_ic_launch"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:padding="@dimen/arctic_fox_test"
            android:src="@drawable/ic_launcher_background"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/view_line2" />

        <View
            android:id="@+id/view_line3"
            android:layout_width="match_parent"
            android:layout_height="1dp"
            android:background="@color/purple_200"
            app:layout_constraintTop_toBottomOf="@id/iv_ic_launch" />

        <!-- 예제4.*******************************************************
         plurals 사용 예제
            - onClick 함수는 mainActivity.kt 에
            - plurals 는 strings.xml 에 위치함
        *************************************************************** -->


        <Button
            android:id="@+id/button1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="10dp"
            android:layout_marginTop="10dp"
            android:onClick="initClickBtn1"
            android:text="1"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="@id/view_line3" />

        <Button
            android:id="@+id/button2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="10dp"
            android:onClick="initClickBtn2"
            android:text="2"
            app:layout_constraintStart_toEndOf="@id/button1"
            app:layout_constraintTop_toTopOf="@id/button1" />


    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>